{"version":3,"file":"input-9e22f85d.js","sources":["../../../../SpaBlogEditor/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../../../../SpaBlogEditor/node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../../../../SpaBlogEditor/node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs","../../../../SpaBlogEditor/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../../../../SpaBlogEditor/src/components/ui/input.tsx"],"sourcesContent":["const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":["sides","min","max","round","floor","createCoords","v","oppositeSideMap","oppositeAlignmentMap","clamp","start","value","end","evaluate","param","getSide","placement","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","getSideList","side","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","expandPaddingObject","padding","__spreadValues","getPaddingObject","rectToClientRect","rect","__spreadProps","computeCoordsFromPlacement","_ref","reference","floating","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition","config","__async","strategy","middleware","platform","validMiddleware","x","y","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","detectOverflow","state","options","_await$platform$isEle","elements","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","offsetParent","offsetScale","elementClientRect","arrow","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","flip","_middlewareData$arrow","_middlewareData$flip","initialPlacement","_a","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","detectOverflowOptions","__objRest","isBasePlacement","fallbackPlacements","placements","overflow","overflows","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","resetPlacement","d","a","b","_overflowsData$map$so","acc","getSideOffsets","isAnySideFullyClipped","hide","offsets","getBoundingRect","minX","minY","maxX","maxY","getRectsByLine","sortedRects","groups","prevRect","inline","nativeClientRects","clientRects","fallback","getBoundingClientRect","firstRect","lastRect","isTop","top","bottom","left","right","width","height","isLeftSide","maxRight","minLeft","measureRects","resetRects","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","diffCoords","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","isOriginSide","size","apply","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","getNodeName","node","isNode","getWindow","_node$ownerDocument","getDocumentElement","isElement","isHTMLElement","isShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","isTableElement","isContainingBlock","webkit","isWebKit","css","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","getNodeScroll","result","getNearestOverflowAncestor","parentNode","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","unwrapElement","getScale","domElement","$","noOffsets","getVisualOffsets","shouldAddVisualOffsets","isFixed","floatingOffsetParent","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentIFrame","iframeScale","iframeRect","convertOffsetParentRelativeRectToViewportRelativeRect","isOffsetParentAnElement","documentElement","scroll","offsetRect","getClientRects","getWindowScrollBarX","getDocumentRect","html","body","getViewportRect","visualViewport","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","getClippingElementAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingRect","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getDimensions","getRectRelativeToOffsetParent","getTrueOffsetParent","polyfill","getOffsetParent","window","getElementRects","getOffsetParentFn","getDimensionsFn","isRTL","observeMove","onMove","io","timeoutId","root","cleanup","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","isFirstUpdate","handleObserve","entries","ratio","e","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","layoutShift","animationFrame","referenceEl","ancestors","cleanupIo","reobserveFrame","resizeObserver","firstEntry","frameId","prevRefRect","frameLoop","nextRefRect","mergedOptions","platformWithCache","computePosition$1","Input","React.forwardRef","ref","_b","className","type","props","jsx","cn"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}