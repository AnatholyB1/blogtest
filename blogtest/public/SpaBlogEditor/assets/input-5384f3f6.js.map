{"version":3,"file":"input-5384f3f6.js","sources":["../../../../SpaBlogEditor/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../../../../SpaBlogEditor/node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../../../../SpaBlogEditor/node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs","../../../../SpaBlogEditor/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../../../../SpaBlogEditor/src/components/ui/icons.tsx","../../../../SpaBlogEditor/src/components/ui/input.tsx"],"sourcesContent":["const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n","type IconProps = React.HTMLAttributes<SVGElement>\n\nexport const Icons = {\n  logo: (props: IconProps) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 256\" {...props}>\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      <line\n        x1=\"208\"\n        y1=\"128\"\n        x2=\"128\"\n        y2=\"208\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"16\"\n      />\n      <line\n        x1=\"192\"\n        y1=\"40\"\n        x2=\"40\"\n        y2=\"192\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"16\"\n      />\n    </svg>\n  ),\n  twitter: (props: IconProps) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M21.543 7.104c.015.211.015.423.015.636 0 6.507-4.954 14.01-14.01 14.01v-.003A13.94 13.94 0 0 1 0 19.539a9.88 9.88 0 0 0 7.287-2.041 4.93 4.93 0 0 1-4.6-3.42 4.916 4.916 0 0 0 2.223-.084A4.926 4.926 0 0 1 .96 9.167v-.062a4.887 4.887 0 0 0 2.235.616A4.928 4.928 0 0 1 1.67 3.148a13.98 13.98 0 0 0 10.15 5.144 4.929 4.929 0 0 1 8.39-4.49 9.868 9.868 0 0 0 3.128-1.196 4.941 4.941 0 0 1-2.165 2.724A9.828 9.828 0 0 0 24 4.555a10.019 10.019 0 0 1-2.457 2.549z\" />\n    </svg>\n  ),\n  gitHub: (props: IconProps) => (\n    <svg viewBox=\"0 0 438.549 438.549\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M409.132 114.573c-19.608-33.596-46.205-60.194-79.798-79.8-33.598-19.607-70.277-29.408-110.063-29.408-39.781 0-76.472 9.804-110.063 29.408-33.596 19.605-60.192 46.204-79.8 79.8C9.803 148.168 0 184.854 0 224.63c0 47.78 13.94 90.745 41.827 128.906 27.884 38.164 63.906 64.572 108.063 79.227 5.14.954 8.945.283 11.419-1.996 2.475-2.282 3.711-5.14 3.711-8.562 0-.571-.049-5.708-.144-15.417a2549.81 2549.81 0 01-.144-25.406l-6.567 1.136c-4.187.767-9.469 1.092-15.846 1-6.374-.089-12.991-.757-19.842-1.999-6.854-1.231-13.229-4.086-19.13-8.559-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-.951-2.568-2.098-3.711-3.429-1.142-1.331-1.997-2.663-2.568-3.997-.572-1.335-.098-2.43 1.427-3.289 1.525-.859 4.281-1.276 8.28-1.276l5.708.853c3.807.763 8.516 3.042 14.133 6.851 5.614 3.806 10.229 8.754 13.846 14.842 4.38 7.806 9.657 13.754 15.846 17.847 6.184 4.093 12.419 6.136 18.699 6.136 6.28 0 11.704-.476 16.274-1.423 4.565-.952 8.848-2.383 12.847-4.285 1.713-12.758 6.377-22.559 13.988-29.41-10.848-1.14-20.601-2.857-29.264-5.14-8.658-2.286-17.605-5.996-26.835-11.14-9.235-5.137-16.896-11.516-22.985-19.126-6.09-7.614-11.088-17.61-14.987-29.979-3.901-12.374-5.852-26.648-5.852-42.826 0-23.035 7.52-42.637 22.557-58.817-7.044-17.318-6.379-36.732 1.997-58.24 5.52-1.715 13.706-.428 24.554 3.853 10.85 4.283 18.794 7.952 23.84 10.994 5.046 3.041 9.089 5.618 12.135 7.708 17.705-4.947 35.976-7.421 54.818-7.421s37.117 2.474 54.823 7.421l10.849-6.849c7.419-4.57 16.18-8.758 26.262-12.565 10.088-3.805 17.802-4.853 23.134-3.138 8.562 21.509 9.325 40.922 2.279 58.24 15.036 16.18 22.559 35.787 22.559 58.817 0 16.178-1.958 30.497-5.853 42.966-3.9 12.471-8.941 22.457-15.125 29.979-6.191 7.521-13.901 13.85-23.131 18.986-9.232 5.14-18.182 8.85-26.84 11.136-8.662 2.286-18.415 4.004-29.263 5.146 9.894 8.562 14.842 22.077 14.842 40.539v60.237c0 3.422 1.19 6.279 3.572 8.562 2.379 2.279 6.136 2.95 11.276 1.995 44.163-14.653 80.185-41.062 108.068-79.226 27.88-38.161 41.825-81.126 41.825-128.906-.01-39.771-9.818-76.454-29.414-110.049z\"\n      ></path>\n    </svg>\n  ),\n  radix: (props: IconProps) => (\n    <svg viewBox=\"0 0 25 25\" fill=\"none\" {...props}>\n      <path\n        d=\"M12 25C7.58173 25 4 21.4183 4 17C4 12.5817 7.58173 9 12 9V25Z\"\n        fill=\"currentcolor\"\n      ></path>\n      <path d=\"M12 0H4V8H12V0Z\" fill=\"currentcolor\"></path>\n      <path\n        d=\"M17 8C19.2091 8 21 6.20914 21 4C21 1.79086 19.2091 0 17 0C14.7909 0 13 1.79086 13 4C13 6.20914 14.7909 8 17 8Z\"\n        fill=\"currentcolor\"\n      ></path>\n    </svg>\n  ),\n  aria: (props: IconProps) => (\n    <svg role=\"img\" viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n      <path d=\"M13.966 22.624l-1.69-4.281H8.122l3.892-9.144 5.662 13.425zM8.884 1.376H0v21.248zm15.116 0h-8.884L24 22.624Z\" />\n    </svg>\n  ),\n  npm: (props: IconProps) => (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M1.763 0C.786 0 0 .786 0 1.763v20.474C0 23.214.786 24 1.763 24h20.474c.977 0 1.763-.786 1.763-1.763V1.763C24 .786 23.214 0 22.237 0zM5.13 5.323l13.837.019-.009 13.836h-3.464l.01-10.382h-3.456L12.04 19.17H5.113z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  yarn: (props: IconProps) => (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M12 0C5.375 0 0 5.375 0 12s5.375 12 12 12 12-5.375 12-12S18.625 0 12 0zm.768 4.105c.183 0 .363.053.525.157.125.083.287.185.755 1.154.31-.088.468-.042.551-.019.204.056.366.19.463.375.477.917.542 2.553.334 3.605-.241 1.232-.755 2.029-1.131 2.576.324.329.778.899 1.117 1.825.278.774.31 1.478.273 2.015a5.51 5.51 0 0 0 .602-.329c.593-.366 1.487-.917 2.553-.931.714-.009 1.269.445 1.353 1.103a1.23 1.23 0 0 1-.945 1.362c-.649.158-.95.278-1.821.843-1.232.797-2.539 1.242-3.012 1.39a1.686 1.686 0 0 1-.704.343c-.737.181-3.266.315-3.466.315h-.046c-.783 0-1.214-.241-1.45-.491-.658.329-1.51.19-2.122-.134a1.078 1.078 0 0 1-.58-1.153 1.243 1.243 0 0 1-.153-.195c-.162-.25-.528-.936-.454-1.946.056-.723.556-1.367.88-1.71a5.522 5.522 0 0 1 .408-2.256c.306-.727.885-1.348 1.32-1.737-.32-.537-.644-1.367-.329-2.21.227-.602.412-.936.82-1.08h-.005c.199-.074.389-.153.486-.259a3.418 3.418 0 0 1 2.298-1.103c.037-.093.079-.185.125-.283.31-.658.639-1.029 1.024-1.168a.94.94 0 0 1 .328-.06zm.006.7c-.507.016-1.001 1.519-1.001 1.519s-1.27-.204-2.266.871c-.199.218-.468.334-.746.44-.079.028-.176.023-.417.672-.371.991.625 2.094.625 2.094s-1.186.839-1.626 1.881c-.486 1.144-.338 2.261-.338 2.261s-.843.732-.899 1.487c-.051.663.139 1.2.343 1.515.227.343.51.176.51.176s-.561.653-.037.931c.477.25 1.283.394 1.71-.037.31-.31.371-1.001.486-1.283.028-.065.12.111.209.199.097.093.264.195.264.195s-.755.324-.445 1.066c.102.246.468.403 1.066.398.222-.005 2.664-.139 3.313-.296.375-.088.505-.283.505-.283s1.566-.431 2.998-1.357c.917-.598 1.293-.76 2.034-.936.612-.148.57-1.098-.241-1.084-.839.009-1.575.44-2.196.825-1.163.718-1.742.672-1.742.672l-.018-.032c-.079-.13.371-1.293-.134-2.678-.547-1.515-1.413-1.881-1.344-1.997.297-.5 1.038-1.297 1.334-2.78.176-.899.13-2.377-.269-3.151-.074-.144-.732.241-.732.241s-.616-1.371-.788-1.483a.271.271 0 0 0-.157-.046z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  pnpm: (props: IconProps) => (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M0 0v7.5h7.5V0zm8.25 0v7.5h7.498V0zm8.25 0v7.5H24V0zM8.25 8.25v7.5h7.498v-7.5zm8.25 0v7.5H24v-7.5zM0 16.5V24h7.5v-7.5zm8.25 0V24h7.498v-7.5zm8.25 0V24H24v-7.5z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  react: (props: IconProps) => (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M14.23 12.004a2.236 2.236 0 0 1-2.235 2.236 2.236 2.236 0 0 1-2.236-2.236 2.236 2.236 0 0 1 2.235-2.236 2.236 2.236 0 0 1 2.236 2.236zm2.648-10.69c-1.346 0-3.107.96-4.888 2.622-1.78-1.653-3.542-2.602-4.887-2.602-.41 0-.783.093-1.106.278-1.375.793-1.683 3.264-.973 6.365C1.98 8.917 0 10.42 0 12.004c0 1.59 1.99 3.097 5.043 4.03-.704 3.113-.39 5.588.988 6.38.32.187.69.275 1.102.275 1.345 0 3.107-.96 4.888-2.624 1.78 1.654 3.542 2.603 4.887 2.603.41 0 .783-.09 1.106-.275 1.374-.792 1.683-3.263.973-6.365C22.02 15.096 24 13.59 24 12.004c0-1.59-1.99-3.097-5.043-4.032.704-3.11.39-5.587-.988-6.38-.318-.184-.688-.277-1.092-.278zm-.005 1.09v.006c.225 0 .406.044.558.127.666.382.955 1.835.73 3.704-.054.46-.142.945-.25 1.44-.96-.236-2.006-.417-3.107-.534-.66-.905-1.345-1.727-2.035-2.447 1.592-1.48 3.087-2.292 4.105-2.295zm-9.77.02c1.012 0 2.514.808 4.11 2.28-.686.72-1.37 1.537-2.02 2.442-1.107.117-2.154.298-3.113.538-.112-.49-.195-.964-.254-1.42-.23-1.868.054-3.32.714-3.707.19-.09.4-.127.563-.132zm4.882 3.05c.455.468.91.992 1.36 1.564-.44-.02-.89-.034-1.345-.034-.46 0-.915.01-1.36.034.44-.572.895-1.096 1.345-1.565zM12 8.1c.74 0 1.477.034 2.202.093.406.582.802 1.203 1.183 1.86.372.64.71 1.29 1.018 1.946-.308.655-.646 1.31-1.013 1.95-.38.66-.773 1.288-1.18 1.87-.728.063-1.466.098-2.21.098-.74 0-1.477-.035-2.202-.093-.406-.582-.802-1.204-1.183-1.86-.372-.64-.71-1.29-1.018-1.946.303-.657.646-1.313 1.013-1.954.38-.66.773-1.286 1.18-1.868.728-.064 1.466-.098 2.21-.098zm-3.635.254c-.24.377-.48.763-.704 1.16-.225.39-.435.782-.635 1.174-.265-.656-.49-1.31-.676-1.947.64-.15 1.315-.283 2.015-.386zm7.26 0c.695.103 1.365.23 2.006.387-.18.632-.405 1.282-.66 1.933-.2-.39-.41-.783-.64-1.174-.225-.392-.465-.774-.705-1.146zm3.063.675c.484.15.944.317 1.375.498 1.732.74 2.852 1.708 2.852 2.476-.005.768-1.125 1.74-2.857 2.475-.42.18-.88.342-1.355.493-.28-.958-.646-1.956-1.1-2.98.45-1.017.81-2.01 1.085-2.964zm-13.395.004c.278.96.645 1.957 1.1 2.98-.45 1.017-.812 2.01-1.086 2.964-.484-.15-.944-.318-1.37-.5-1.732-.737-2.852-1.706-2.852-2.474 0-.768 1.12-1.742 2.852-2.476.42-.18.88-.342 1.356-.494zm11.678 4.28c.265.657.49 1.312.676 1.948-.64.157-1.316.29-2.016.39.24-.375.48-.762.705-1.158.225-.39.435-.788.636-1.18zm-9.945.02c.2.392.41.783.64 1.175.23.39.465.772.705 1.143-.695-.102-1.365-.23-2.006-.386.18-.63.406-1.282.66-1.933zM17.92 16.32c.112.493.2.968.254 1.423.23 1.868-.054 3.32-.714 3.708-.147.09-.338.128-.563.128-1.012 0-2.514-.807-4.11-2.28.686-.72 1.37-1.536 2.02-2.44 1.107-.118 2.154-.3 3.113-.54zm-11.83.01c.96.234 2.006.415 3.107.532.66.905 1.345 1.727 2.035 2.446-1.595 1.483-3.092 2.295-4.11 2.295-.22-.005-.406-.05-.553-.132-.666-.38-.955-1.834-.73-3.703.054-.46.142-.944.25-1.438zm4.56.64c.44.02.89.034 1.345.034.46 0 .915-.01 1.36-.034-.44.572-.895 1.095-1.345 1.565-.455-.47-.91-.993-1.36-1.565z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  tailwind: (props: IconProps) => (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M12.001,4.8c-3.2,0-5.2,1.6-6,4.8c1.2-1.6,2.6-2.2,4.2-1.8c0.913,0.228,1.565,0.89,2.288,1.624 C13.666,10.618,15.027,12,18.001,12c3.2,0,5.2-1.6,6-4.8c-1.2,1.6-2.6,2.2-4.2,1.8c-0.913-0.228-1.565-0.89-2.288-1.624 C16.337,6.182,14.976,4.8,12.001,4.8z M6.001,12c-3.2,0-5.2,1.6-6,4.8c1.2-1.6,2.6-2.2,4.2-1.8c0.913,0.228,1.565,0.89,2.288,1.624 c1.177,1.194,2.538,2.576,5.512,2.576c3.2,0,5.2-1.6,6-4.8c-1.2,1.6-2.6,2.2-4.2,1.8c-0.913-0.228-1.565-0.89-2.288-1.624 C10.337,13.382,8.976,12,6.001,12z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  google: (props: IconProps) => (\n    <svg role=\"img\" viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\n      />\n    </svg>\n  ),\n  apple: (props: IconProps) => (\n    <svg role=\"img\" viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  paypal: (props: IconProps) => (\n    <svg role=\"img\" viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M7.076 21.337H2.47a.641.641 0 0 1-.633-.74L4.944.901C5.026.382 5.474 0 5.998 0h7.46c2.57 0 4.578.543 5.69 1.81 1.01 1.15 1.304 2.42 1.012 4.287-.023.143-.047.288-.077.437-.983 5.05-4.349 6.797-8.647 6.797h-2.19c-.524 0-.968.382-1.05.9l-1.12 7.106zm14.146-14.42a3.35 3.35 0 0 0-.607-.541c-.013.076-.026.175-.041.254-.93 4.778-4.005 7.201-9.138 7.201h-2.19a.563.563 0 0 0-.556.479l-1.187 7.527h-.506l-.24 1.516a.56.56 0 0 0 .554.647h3.882c.46 0 .85-.334.922-.788.06-.26.76-4.852.816-5.09a.932.932 0 0 1 .923-.788h.58c3.76 0 6.705-1.528 7.565-5.946.36-1.847.174-3.388-.777-4.471z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  spinner: (props: IconProps) => (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <path d=\"M21 12a9 9 0 1 1-6.219-8.56\" />\n    </svg>\n  ),\n  logicIcon: (props: IconProps) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35\" height=\"33\" viewBox=\"0 0 35 33\" fill=\"none\" {...props}>\n    <path d=\"M16.8959 1.03488C15.7229 0.147703 14.2484 -0.1155 12.848 0.311372L3.3756 3.19939C1.42418 3.79474 0.112305 5.58526 0.112305 7.65669V28.2327C0.112305 29.7185 0.784852 31.0791 1.95772 31.9649C3.13081 32.8522 4.60695 33.1153 6.00569 32.6885L13.0769 30.532C12.8558 29.7908 12.7437 29.0173 12.7437 28.2327V18.8882C12.7437 16.9259 13.4479 15.0518 14.7298 13.6142C15.6707 12.5552 16.8912 11.7739 18.2552 11.3567L18.7414 11.2156V4.76856C18.7414 3.28276 18.0689 1.92217 16.8958 1.03488H16.8959Z\" fill=\"white\"/>\n    <path d=\"M34.5286 15.9996V25.3441C34.5286 27.414 33.2183 29.2062 31.2653 29.7999L21.7929 32.688C21.3541 32.8228 20.9073 32.8886 20.4652 32.8886C19.4974 32.8886 18.5502 32.5742 17.7449 31.9644C17.3771 31.6853 17.0582 31.3627 16.7961 31.0018C16.4773 30.5685 16.2388 30.0856 16.0888 29.5673C16.0872 29.5673 16.0857 29.5673 16.0841 29.5688L16.0872 29.5657C15.9657 29.1404 15.8994 28.6928 15.8994 28.2323V18.8878C15.8994 17.9282 16.1804 17.0282 16.6762 16.2804C17.1719 15.5327 17.8823 14.9359 18.7412 14.5812C18.8786 14.5251 19.0191 14.4736 19.1628 14.4305L20.3216 14.0774L28.6353 11.5423C30.0356 11.1155 31.5102 11.3787 32.6832 12.2659C33.8563 13.1532 34.5287 14.5138 34.5287 15.9996H34.5286Z\" fill=\"white\"/>\n   </svg>  \n  ),\n  ErpAppIcon: (props: IconProps) => (\n    <svg width={34} height={34} viewBox=\"0 0 34 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n      <rect width=\"34\" height=\"34\" rx=\"6\" fill=\"#0A5FD9\"/>\n      <path d=\"M25.8746 8.01675C25.8752 8.01842 25.8762 8.01994 25.8775 8.02123C26.2178 8.36837 26.4747 8.78805 26.6286 9.24861C26.7828 9.71003 26.8296 10.2004 26.7656 10.6825C26.7015 11.1647 26.5282 11.626 26.2589 12.0315C25.9895 12.437 25.6311 12.776 25.2108 13.023C22.1811 14.7987 18.6456 15.5213 15.1594 15.0774C11.7621 14.6448 8.75083 13.3393 6.29233 10.9692C6.22791 10.9071 6.04466 10.7592 6.04443 10.6066C6.04438 10.572 6.04857 10.5393 6.05566 10.5089C6.10318 10.3048 6.28974 10.169 6.4365 10.0195L10.1255 6.26055C10.2164 6.16798 10.3043 6.04492 10.434 6.04492C10.5587 6.04492 10.644 6.12138 10.6821 6.15944C12.1564 7.59536 13.8881 8.44057 15.9339 8.70671C18.0159 8.97756 20.1293 8.55489 21.9454 7.50443C22.5636 7.14128 23.2858 6.99422 23.9973 7.08656C24.708 7.17878 25.3675 7.50451 25.8716 8.01222C25.8729 8.01351 25.8739 8.01505 25.8746 8.01675Z\" fill=\"white\"/>\n      <path d=\"M25.8557 8.00238C25.2554 7.40244 24.4415 7.06543 23.5929 7.06543C22.7442 7.06543 21.9303 7.40244 21.3301 8.00238L7.74603 21.5864C7.1461 22.1867 6.80908 23.0006 6.80908 23.8492C6.80908 24.6979 7.1461 25.5118 7.74603 26.112L-nan -nanL7.74603 26.112C8.0431 26.4093 8.39585 26.6452 8.78412 26.8061C9.17238 26.967 9.58855 27.0498 10.0088 27.0498C10.4291 27.0498 10.8453 26.967 11.2336 26.8061C11.6218 26.6452 11.9746 26.4093 12.2717 26.112L25.8557 12.528C26.153 12.2309 26.3888 11.8782 26.5497 11.4899C26.7107 11.1016 26.7935 10.6855 26.7935 10.2652C26.7935 9.8449 26.7107 9.42873 26.5497 9.04047C26.3888 8.6522 26.153 8.29945 25.8557 8.00238Z\" fill=\"url(#paint0_linear_467_3871)\"/>\n      <path d=\"M7.72434 26.0947C7.38409 25.7473 7.12735 25.3271 6.97356 24.8658C6.81978 24.4044 6.77299 23.9142 6.83674 23.4321C6.9005 22.95 7.07311 22.4888 7.34152 22.0833C7.60993 21.6778 7.96709 21.3388 8.38594 21.0918C11.4062 19.3163 14.9304 18.5938 18.4055 19.0376C21.8002 19.4711 24.9605 20.9935 27.4143 23.3731C27.4975 23.4512 27.5166 23.4703 27.5166 23.5848C27.5166 23.7486 27.3453 23.854 27.2318 23.9722L23.8768 27.4685C23.8094 27.5387 23.7444 27.6114 23.6736 27.6781C23.5537 27.7912 23.3478 27.9556 23.1649 27.9556C22.8864 27.9556 22.6504 27.6895 22.4969 27.5548C21.0854 26.3151 19.5041 25.6526 17.6322 25.4083C15.5569 25.1374 13.4502 25.5601 11.6399 26.6106C11.023 26.9728 10.3028 27.1188 9.59352 27.0253C8.88425 26.9319 8.22644 26.6044 7.72434 26.0947Z\" fill=\"url(#paint1_linear_467_3871)\"/>\n      <defs>\n      <linearGradient id=\"paint0_linear_467_3871\" x1=\"26.587\" y1=\"9.00637\" x2=\"7.50049\" y2=\"26.0004\" gradientUnits=\"userSpaceOnUse\">\n      <stop stopColor=\"white\"/>\n      <stop offset=\"0.831909\" stopColor=\"#2785FF\" stop-opacity=\"0.79\"/>\n      <stop offset=\"1\" stopColor=\"white\" stop-opacity=\"0\"/>\n      </linearGradient>\n      <linearGradient id=\"paint1_linear_467_3871\" x1=\"7.06581\" y1=\"23.6019\" x2=\"33.0005\" y2=\"26\" gradientUnits=\"userSpaceOnUse\">\n      <stop stopColor=\"white\"/>\n      <stop offset=\"0.606729\" stopColor=\"white\"/>\n      <stop offset=\"1\" stopColor=\"#0457D1\"/>\n      <stop offset=\"1\" stopColor=\"white\"/>\n      </linearGradient>\n      </defs>\n      </svg>\n  ),\n  ZaviagoAppIcon: (props: IconProps) => (\n    <svg width={34} height={34} viewBox=\"0 0 34 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <rect width=\"34\" height=\"34\" rx=\"6\" fill=\"#1964C0\"/>\n    <g clip-path=\"url(#clip0_467_3879)\">\n    <path d=\"M15.4127 7.56495L10.1089 10.5608C8.888 11.2498 8.13574 12.5243 8.13574 13.9029V19.9256C8.13574 21.3043 8.888 22.5787 10.1089 23.2677L15.4395 26.2787C16.6604 26.9684 18.1642 26.9684 19.3844 26.2787L22.7031 24.4049L15.4437 20.2608C14.2319 19.5691 13.4867 18.3001 13.4867 16.927V10.898C13.4867 9.43115 14.2875 8.23598 15.4149 7.58081C15.4451 7.56288 15.4381 7.55046 15.4127 7.56495Z\" fill=\"url(#paint0_linear_467_3879)\"/>\n    <path d=\"M26.7361 13.8696L26.7389 19.8565C26.7389 19.8854 26.7234 19.8847 26.7234 19.8503C26.7059 18.5689 23.048 16.2516 21.7483 15.5185C21.7483 15.5185 21.1747 14.9496 20.7954 14.6192C20.4161 14.2882 20.3979 14.273 20.115 14.0896C19.8694 13.9309 19.6139 13.8068 19.45 13.7268L19.4345 13.7192C19.2712 13.6399 18.7814 13.4282 18.7814 13.4282C17.0933 12.8468 16.6035 12.7937 15.6239 13.5344C15.6239 13.5344 14.4804 14.6192 14.0448 15.5978C13.6092 16.5765 13.4987 17.4365 13.6909 17.9785C13.7007 18.0054 13.707 18.031 13.712 18.0551C14.2784 19.4592 14.6725 19.682 15.6626 20.2413C15.7358 20.2834 15.8132 20.3268 15.8941 20.373L18.3986 21.5372L23.0804 23.2034L19.2487 26.2785C18.0285 26.9682 16.524 26.9682 15.3037 26.2785L9.97248 23.2675C8.75226 22.5785 8 21.3041 8 19.9254V13.9027C8 12.5241 8.75226 11.2496 9.97248 10.5606L15.2763 7.56474C15.3023 7.55026 15.3094 7.56267 15.2791 7.5806C15.2179 7.61578 15.1567 7.66612 15.0954 7.72957L15.4747 7.51578C16.6964 6.8275 18.2016 6.82819 19.4232 7.51716L24.7601 10.5289C25.9817 11.2178 26.7354 12.4916 26.7361 13.8696Z\" fill=\"url(#paint1_linear_467_3879)\"/>\n    <path d=\"M10.2139 23.4184L15.562 26.4487C16.7949 27.1405 18.3522 27.1267 19.5865 26.4336L24.9748 23.4067C26.2091 22.7129 26.9691 21.4329 26.9698 20.0474L26.9726 13.9977C26.9733 12.6129 26.214 11.3329 24.9811 10.6411L21.6287 8.75977L21.5858 17.0198C21.5787 18.3984 20.8194 19.6708 19.5908 20.3605L14.1962 23.3915C12.883 24.1287 11.4102 24.048 10.2547 23.4184C10.223 23.4011 10.1879 23.4039 10.2139 23.4184Z\" fill=\"url(#paint2_linear_467_3879)\"/>\n    </g>\n    <defs>\n    <linearGradient id=\"paint0_linear_467_3879\" x1=\"15.3832\" y1=\"7.55859\" x2=\"15.5096\" y2=\"26.7956\" gradientUnits=\"userSpaceOnUse\">\n    <stop stop-color=\"#AD7EE1\"/>\n    <stop offset=\"1\" stop-color=\"#2A64BB\"/>\n    </linearGradient>\n    <linearGradient id=\"paint1_linear_467_3879\" x1=\"8\" y1=\"10.8192\" x2=\"27.2879\" y2=\"22.0323\" gradientUnits=\"userSpaceOnUse\">\n    <stop stop-color=\"white\"/>\n    <stop offset=\"1\" stop-color=\"#7EACFF\"/>\n    </linearGradient>\n    <linearGradient id=\"paint2_linear_467_3879\" x1=\"12.8576\" y1=\"26.9605\" x2=\"25.6373\" y2=\"9.73733\" gradientUnits=\"userSpaceOnUse\">\n    <stop stop-color=\"white\"/>\n    <stop offset=\"1\" stop-color=\"white\"/>\n    </linearGradient>\n    <clipPath id=\"clip0_467_3879\">\n    <rect width=\"19\" height=\"20\" fill=\"white\" transform=\"translate(8 7)\"/>\n    </clipPath>\n    </defs>\n  </svg> \n  ),\n  ZaviagoSearch : (props: IconProps) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 19 20\" fill=\"none\" {...props}>\n  <g clip-path=\"url(#clip0_1753_7112)\">\n    <path d=\"M7.41372 0.564946L2.1099 3.56081C0.888978 4.24977 0.136719 5.52426 0.136719 6.90288V12.9256C0.136719 14.3043 0.888978 15.5787 2.1099 16.2677L7.44046 19.2787C8.66138 19.9684 10.1652 19.9684 11.3854 19.2787L14.7041 17.4049L7.44468 13.2608C6.2329 12.5691 5.48768 11.3001 5.48768 9.92702V3.89805C5.48768 2.43115 6.2885 1.23598 7.41583 0.580808C7.44609 0.562877 7.43905 0.550463 7.41372 0.564946Z\" fill=\"url(#paint0_linear_1753_7112)\"/>\n    <path d=\"M18.7361 6.86957L18.7389 12.8565C18.7389 12.8854 18.7234 12.8847 18.7234 12.8503C18.7059 11.5689 15.048 9.25164 13.7483 8.51854C13.7483 8.51854 13.1747 7.94957 12.7954 7.61923C12.4161 7.28819 12.3979 7.27302 12.115 7.08957C11.8694 6.93095 11.6139 6.80681 11.45 6.72681L11.4345 6.71922C11.2712 6.63991 10.7814 6.42819 10.7814 6.42819C9.09326 5.84681 8.60348 5.79371 7.62393 6.5344C7.62393 6.5344 6.48041 7.61923 6.04482 8.59785C5.60922 9.57647 5.49874 10.4365 5.69085 10.9785C5.7007 11.0054 5.70704 11.031 5.71196 11.0551C6.27844 12.4592 6.67252 12.682 7.66263 13.2413C7.73581 13.2834 7.81322 13.3268 7.89415 13.373L10.3986 14.5372L15.0804 16.2034L11.2487 19.2785C10.0285 19.9682 8.52396 19.9682 7.30374 19.2785L1.97248 16.2675C0.752259 15.5785 0 14.3041 0 12.9254V6.90267C0 5.52405 0.752259 4.24957 1.97248 3.5606L7.2763 0.564742C7.30233 0.550259 7.30937 0.562673 7.27911 0.580604C7.21789 0.615776 7.15667 0.666121 7.09544 0.729569L7.47474 0.515776C8.69637 -0.1725 10.2016 -0.17181 11.4232 0.517156L16.7601 3.52888C17.9817 4.21785 18.7354 5.49164 18.7361 6.86957Z\" fill=\"url(#paint1_linear_1753_7112)\"/>\n    <path d=\"M2.21414 16.4179L7.56229 19.4482C8.79518 20.14 10.3525 20.1262 11.5868 19.4331L16.975 16.4062C18.2093 15.7124 18.9693 14.4324 18.97 13.0469L18.9728 6.99721C18.9736 5.61238 18.2143 4.33238 16.9814 3.64066L13.6289 1.75928L13.586 10.0193C13.579 11.3979 12.8197 12.6703 11.591 13.36L6.1964 16.391C4.88329 17.1282 3.41044 17.0476 2.25496 16.4179C2.22329 16.4007 2.18811 16.4034 2.21414 16.4179Z\" fill=\"url(#paint2_linear_1753_7112)\"/>\n  </g>\n  <defs>\n    <linearGradient id=\"paint0_linear_1753_7112\" x1=\"7.38417\" y1=\"0.558594\" x2=\"7.51055\" y2=\"19.7956\" gradientUnits=\"userSpaceOnUse\">\n      <stop stop-color=\"#AD7EE1\"/>\n      <stop offset=\"1\" stop-color=\"#2A64BB\"/>\n    </linearGradient>\n    <linearGradient id=\"paint1_linear_1753_7112\" x1=\"1.37586e-07\" y1=\"3.81921\" x2=\"19.2879\" y2=\"15.0323\" gradientUnits=\"userSpaceOnUse\">\n      <stop stop-color=\"#2F99FF\"/>\n      <stop offset=\"1\" stop-color=\"#002C7D\"/>\n    </linearGradient>\n    <linearGradient id=\"paint2_linear_1753_7112\" x1=\"4.85788\" y1=\"19.96\" x2=\"17.6375\" y2=\"2.73684\" gradientUnits=\"userSpaceOnUse\">\n      <stop stop-color=\"#24A5FA\"/>\n      <stop offset=\"1\" stop-color=\"#24A5F9\"/>\n    </linearGradient>\n    <clipPath id=\"clip0_1753_7112\">\n      <rect width=\"19\" height=\"20\" fill=\"white\"/>\n    </clipPath>\n  </defs>\n</svg>),\n  PosAppIcon: (props: IconProps) => (\n    <svg  viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <rect width=\"36\" height=\"36\" rx=\"7\" fill=\"#013395\"/>\n    <path d=\"M11.8348 14.1866C11.8344 13.6954 12.2031 13.1495 12.6583 12.9671L26.7311 7.32999C27.1862 7.14765 27.5555 7.39801 27.5559 7.88917L27.5645 20.4289C27.5649 20.9201 27.2206 21.4734 26.7654 21.6557L11.6354 27.7164L11.8348 14.1866Z\" fill=\"url(#paint0_linear_467_3889)\"/>\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.5826 27.7371L11.6307 20.7927L18.9189 17.8733C19.5155 17.6343 20.3432 17.8339 20.7677 18.3191L23.7172 21.6901C24.1417 22.1753 24.0023 22.7623 23.4057 23.0013L11.605 27.7283C11.5976 27.7313 11.5901 27.7342 11.5826 27.7371Z\" fill=\"url(#paint1_linear_467_3889)\"/>\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.7484 20.7274L7.31821 22.5021C6.73255 22.7367 6.59684 23.316 7.01509 23.796L9.92104 27.131C10.3341 27.6051 11.1329 27.805 11.7167 27.584L11.7484 20.7274Z\" fill=\"url(#paint2_linear_467_3889)\"/>\n    <path d=\"M25.2733 22.2539C25.2022 22.2583 24.5249 22.0238 24.2408 21.8607C24.1395 21.8025 23.967 21.6983 23.9045 21.6582C23.7194 21.5397 23.3848 21.2759 23.23 21.1577L23.3777 23.0132L25.2733 22.2539Z\" fill=\"white\"/>\n    <path d=\"M11.5829 27.7375C11.1089 27.9273 10.2588 27.5722 9.86176 27.0617C10.2727 27.4266 10.9017 27.2886 11.1912 27.0443C11.7259 26.5931 11.7593 25.6156 11.7291 25.255L12.9204 27.2017C12.8837 27.2082 12.4429 27.393 11.5829 27.7375Z\" fill=\"url(#paint3_linear_467_3889)\"/>\n    <defs>\n    <linearGradient id=\"paint0_linear_467_3889\" x1=\"26.4926\" y1=\"7.42549\" x2=\"20.9216\" y2=\"31.7235\" gradientUnits=\"userSpaceOnUse\">\n    <stop stopColor=\"#7ABFFF\"/>\n    <stop offset=\"1\" stopColor=\"white\"/>\n    </linearGradient>\n    <linearGradient id=\"paint1_linear_467_3889\" x1=\"26.4524\" y1=\"7.3076\" x2=\"20.7805\" y2=\"31.8531\" gradientUnits=\"userSpaceOnUse\">\n    <stop stopColor=\"white\"/>\n    <stop offset=\"1\" stopColor=\"white\"/>\n    </linearGradient>\n    <linearGradient id=\"paint2_linear_467_3889\" x1=\"8.11698\" y1=\"23.3297\" x2=\"10.2931\" y2=\"27.3939\" gradientUnits=\"userSpaceOnUse\">\n    <stop stopColor=\"white\"/>\n    <stop offset=\"0.5625\" stopColor=\"#BBD8FF\"/>\n    <stop offset=\"1\" stopColor=\"#98C5FF\"/>\n    </linearGradient>\n    <linearGradient id=\"paint3_linear_467_3889\" x1=\"11.8269\" y1=\"24.8363\" x2=\"12.5333\" y2=\"27.2052\" gradientUnits=\"userSpaceOnUse\">\n    <stop stopColor=\"white\"/>\n    <stop offset=\"1\" stopColor=\"white\"/>\n    </linearGradient>\n    </defs>\n    </svg>),\n  RewardfulAppIcon: (props: IconProps) => (\n    <svg viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n      <rect width=\"36\" height=\"36\" rx=\"7\" fill=\"#FF7009\"/>\n      <g clip-path=\"url(#clip0_1300_9869)\">\n      <mask id=\"mask0_1300_9869\" maskUnits=\"userSpaceOnUse\" x=\"7\" y=\"4\" width=\"22\" height=\"28\">\n      <path d=\"M28.9189 4L7.13672 4L7.13671 32L28.9189 32L28.9189 4Z\" fill=\"white\"/>\n      </mask>\n      <g mask=\"url(#mask0_1300_9869)\">\n      <path d=\"M25.2159 8.65331C24.0557 8.65331 23.228 9.16782 22.4645 10.2855L20.2633 13.502L20.2633 4.32031L15.0127 4.32031L15.0127 13.502L12.8116 10.2855C12.0492 9.16782 11.2215 8.65331 10.0601 8.65331C8.30839 8.6533 7.14247 9.9693 7.13674 11.591C7.13216 12.9793 7.7753 13.8846 9.13152 14.7736L17.638 20.3503L26.1445 14.7736C27.5008 13.8846 28.1439 12.9793 28.1393 11.591C28.1348 9.96931 26.9677 8.65331 25.2159 8.65331Z\" fill=\"white\"/>\n      <path d=\"M17.6379 21.6865C22.6937 21.6865 26.8379 25.5271 26.8265 31.0385L8.44924 31.0385C8.43892 25.5296 12.5821 21.6865 17.6379 21.6865Z\" fill=\"white\"/>\n      </g>\n      </g>\n      <defs>\n      <clipPath id=\"clip0_1300_9869\">\n      <rect width=\"22\" height=\"28\" fill=\"white\" transform=\"translate(7 4)\"/>\n      </clipPath>\n      </defs>\n      </svg>),\n  UntitledAppIcon: (props: IconProps) => (\n    <svg  viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <g clip-path=\"url(#clip0_467_3914)\">\n    <rect width=\"36\" height=\"36\" rx=\"7\" fill=\"#FFF7EF\"/>\n    <rect x=\"36.2832\" y=\"36.1895\" width=\"18.1412\" height=\"36.3783\" rx=\"9.07059\" transform=\"rotate(180 36.2832 36.1895)\" fill=\"#3ACCFF\"/>\n    <rect x=\"18.1277\" y=\"36.207\" width=\"18.1084\" height=\"36.4136\" rx=\"8\" transform=\"rotate(180 18.1277 36.207)\" fill=\"#3480FE\"/>\n    <rect x=\"9.0708\" y=\"24.3975\" width=\"24.6038\" height=\"18.174\" transform=\"rotate(-90 9.0708 24.3975)\" fill=\"#3480FE\"/>\n    <rect y=\"36.1895\" width=\"18.1412\" height=\"36.2824\" rx=\"8\" transform=\"rotate(-90 0 36.1895)\" fill=\"#FFBB00\"/>\n    <ellipse cx=\"27.2112\" cy=\"8.91155\" rx=\"9.07059\" ry=\"9.11858\" fill=\"#FF5C00\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_467_3914\">\n    <rect width=\"36\" height=\"36\" rx=\"7\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>),\n    ReduceAppIcon: (props: IconProps) => (\n      <svg  viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n      <rect width=\"36\" height=\"36\" rx=\"7\" fill=\"url(#paint0_linear_467_3921)\"/>\n      <path d=\"M17.5 8C14.785 8 12.3108 9.03047 10.4468 10.7216L15.2968 12.96C15.7106 13.151 16.161 13.2499 16.6168 13.2499H21.7C22.2799 13.2499 22.75 13.72 22.75 14.2999V22.6999C22.75 23.2798 22.2799 23.7499 21.7 23.7499H13.3C12.7201 23.7499 12.25 23.2798 12.25 22.6999V17.6167C12.25 17.1609 12.1511 16.7106 11.9601 16.2967L9.7216 11.4469C8.03047 13.3108 7 15.785 7 18.5C7 24.299 11.701 29 17.5 29C23.299 29 28 24.299 28 18.5C28 12.701 23.299 8 17.5 8Z\" fill=\"white\"/>\n      <defs>\n      <linearGradient id=\"paint0_linear_467_3921\" x1=\"0\" y1=\"-3\" x2=\"34\" y2=\"41.5\" gradientUnits=\"userSpaceOnUse\">\n      <stop stopColor=\"#FF5786\"/>\n      <stop offset=\"0.583333\" stopColor=\"#CA41C3\"/>\n      <stop offset=\"1\" stopColor=\"#9033E5\"/>\n      </linearGradient>\n      </defs>\n      </svg>\n    ),\n    InbioAppIcon: (props: IconProps) => (\n      <svg  viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n      <rect width=\"36\" height=\"36\" rx=\"7\" fill=\"#FF4A00\"/>\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M25.0002 18.4247C25.0002 16.3446 23.2983 14.6583 21.1988 14.6583L15.7967 14.6583C15.2994 14.6583 14.8964 14.259 14.8964 13.7663C14.8964 13.2737 15.2994 12.8743 15.7967 12.8743L18.1976 12.8743L18.1976 10L15.6967 10C13.5972 10 11.8952 11.6862 11.8952 13.7663C11.8952 15.8464 13.5972 17.5326 15.6967 17.5326L21.1988 17.5326C21.6961 17.5326 22.0991 17.932 22.0991 18.4247C22.0991 18.9174 21.6961 19.3167 21.1988 19.3167L20.0984 19.3167L19.3697 20.6476L20.0984 22.191L21.1988 22.191C23.2983 22.191 25.0002 20.5048 25.0002 18.4247ZM18.1476 19.3167L15.6967 19.3167C13.5972 19.3167 11.8952 21.0029 11.8952 23.083C11.8952 25.1631 13.5972 26.8493 15.6967 26.8493L18.0976 26.8493L18.0976 23.975L15.6967 23.975C15.1994 23.975 14.7963 23.5757 14.7963 23.083C14.7963 22.5903 15.1994 22.191 15.6967 22.191L18.1476 22.191L17.5974 20.506L18.1476 19.3167Z\" fill=\"white\"/>\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.959 18.4249C10.959 20.505 12.6609 22.1913 14.7604 22.1913L20.1625 22.1913C20.6598 22.1913 21.0629 22.5906 21.0629 23.0833C21.0629 23.5759 20.6598 23.9753 20.1625 23.9753L17.7616 23.9753L17.7616 26.8496L20.2626 26.8496C22.3621 26.8496 24.064 25.1634 24.064 23.0833C24.064 21.0032 22.3621 19.317 20.2626 19.317L14.7604 19.317C14.2632 19.317 13.8601 18.9176 13.8601 18.4249C13.8601 17.9323 14.2632 17.5329 14.7604 17.5329L15.8609 17.5329L16.5895 16.202L15.8609 14.6586L14.7604 14.6586C12.6609 14.6586 10.959 16.3448 10.959 18.4249ZM17.8116 17.5329L20.2626 17.5329C22.3621 17.5329 24.064 15.8467 24.064 13.7666C24.064 11.6865 22.3621 10.0003 20.2626 10.0003L17.8616 10.0003L17.8616 12.8746L20.2626 12.8746C20.7598 12.8746 21.1629 13.2739 21.1629 13.7666C21.1629 14.2593 20.7598 14.6586 20.2626 14.6586L17.8116 14.6586L18.3618 16.3436L17.8116 17.5329Z\" fill=\"white\"/>\n      </svg>\n    ),\n    BlogAndPagesAppIcon: (props: IconProps) => (\n      <svg  viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n      <rect width=\"36\" height=\"36\" rx=\"7\" fill=\"#7000FF\"/>\n      <path d=\"M18.2416 8.56352C17.5258 8.02219 16.6261 7.8616 15.7717 8.12206L9.9919 9.88424C8.8012 10.2475 8.00073 11.34 8.00073 12.6039V25.1588C8.00073 26.0654 8.4111 26.8956 9.12675 27.4361C9.84253 27.9775 10.7432 28.138 11.5967 27.8776L15.9113 26.5617C15.7764 26.1095 15.7081 25.6376 15.7081 25.1588V19.4571C15.7081 18.2598 16.1377 17.1162 16.9199 16.239C17.494 15.5929 18.2387 15.1161 19.071 14.8616L19.3676 14.7755V10.8417C19.3676 9.93511 18.9573 9.10492 18.2415 8.56352H18.2416Z\" fill=\"white\"/>\n      <path d=\"M29.0005 17.6953V23.397C29.0005 24.66 28.201 25.7535 27.0094 26.1158L21.2296 27.878C20.9618 27.9602 20.6892 28.0004 20.4195 28.0004C19.8289 28.0004 19.2509 27.8086 18.7596 27.4365C18.5352 27.2662 18.3406 27.0694 18.1807 26.8491C17.9861 26.5848 17.8406 26.2901 17.7491 25.9739C17.7481 25.9739 17.7472 25.9739 17.7462 25.9748L17.7481 25.9729C17.674 25.7134 17.6335 25.4403 17.6335 25.1593V19.4575C17.6335 18.8721 17.805 18.3229 18.1075 17.8666C18.41 17.4104 18.8435 17.0462 19.3675 16.8298C19.4513 16.7956 19.5371 16.7642 19.6248 16.7378L20.3318 16.5224L25.4046 14.9756C26.259 14.7151 27.1588 14.8757 27.8745 15.4171C28.5903 15.9585 29.0006 16.7887 29.0006 17.6953H29.0005Z\" fill=\"white\"/>\n      </svg>\n    ),\n    LineCRMApp: (props: IconProps) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 36 36\" fill=\"none\" {...props}>\n      <rect width=\"36\" height=\"36\" rx=\"7\" fill=\"#3BCD76\"/>\n      <path d=\"M11 27C9.34315 27 8 25.6569 8 24V24V10.9591C8 9.87712 8.87712 9 9.95911 9V9C11.0411 9 11.9182 9.87712 11.9182 10.9591V21V21C11.9639 22.1175 12.8832 23 14.0017 23H15H19.4444C20.549 23 21.4444 23.8954 21.4444 25V25C21.4444 26.1046 20.549 27 19.4444 27H11V27Z\" fill=\"white\"/>\n      <path d=\"M25.4443 9C27.1012 9 28.4443 10.3431 28.4443 12V12L28.4443 25.0409C28.4443 26.1229 27.5672 27 26.4852 27V27C25.4032 27 24.5261 26.1229 24.5261 25.0409L24.5261 15V15C24.4804 13.8825 23.5611 13 22.4427 13L21.4443 13L16.9999 13C15.8953 13 14.9999 12.1046 14.9999 11V11C14.9999 9.89543 15.8953 9 16.9999 9L25.4443 9V9Z\" fill=\"white\"/>\n    </svg>\n  ),\nSidebarApp09:(props: IconProps) => \n   (\n    <svg  viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <rect width=\"36\" height=\"36\" rx=\"7\" fill=\"#CCF600\"/>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M29.0013 18.9473C29.1868 19.141 29.0495 19.4625 28.7813 19.4625H21.9729C21.9225 19.4625 21.8816 19.5034 21.8816 19.5538V24.5443C21.8816 24.6834 21.7874 24.8048 21.6526 24.8393L11.0124 27.5649C10.9546 27.5797 10.8984 27.5361 10.8984 27.4764L10.8984 21.2297C10.8984 21.0906 10.9926 20.9692 11.1274 20.9347L17.6409 19.2662C17.7094 19.2486 17.7328 19.1632 17.6828 19.1132L7.08957 8.51992C6.89771 8.32806 7.03359 8 7.30493 8H18.4798C18.5047 8 18.5285 8.01017 18.5457 8.02816L29.0013 18.9473Z\" fill=\"#1A1A1A\"/>\n    </svg>\n  ),\nSidebarApp10:(props: IconProps) => \n   (\n    <svg  viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <rect width=\"36\" height=\"36\" rx=\"7\" fill=\"#2D0F43\"/>\n    <path d=\"M7.73549 7.00035C7.08929 7.00035 6.75849 7.77511 7.20541 8.24183L17.0407 18.5132C17.0822 18.5565 17.1396 18.5811 17.1997 18.5811L27.4062 18.5811C28.0601 18.5811 28.3875 17.7905 27.9252 17.3282L17.8839 7.28696C17.7004 7.10345 17.4515 7.00035 17.192 7.00035L7.73549 7.00035Z\" fill=\"#EA79DD\" fill-opacity=\"0.56\"/>\n    <path d=\"M7.73549 12.1019C7.08929 12.1019 6.75849 12.8767 7.20541 13.3434L17.0407 23.6148C17.0822 23.6581 17.1396 23.6826 17.1997 23.6826L27.4062 23.6826C28.0601 23.6826 28.3875 22.8921 27.9252 22.4298L17.8839 12.3885C17.7004 12.205 17.4515 12.1019 17.192 12.1019L7.73549 12.1019Z\" fill=\"#EA79DD\" fill-opacity=\"0.56\"/>\n    <path d=\"M7.73549 17.6498C7.08929 17.6498 6.75849 18.4245 7.20541 18.8912L17.0407 29.1626C17.0822 29.206 17.1396 29.2305 17.1997 29.2305L27.4062 29.2305C28.0601 29.2305 28.3875 28.4399 27.9252 27.9776L17.8839 17.9364C17.7004 17.7529 17.4515 17.6498 17.192 17.6498L7.73549 17.6498Z\" fill=\"#EA79DD\" fill-opacity=\"0.56\"/>\n    </svg>\n  ),\nAppStoreApp01:(props: IconProps) => \n   (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\" fill=\"none\" {...props}>\n      <rect width=\"52\" height=\"52\" rx=\"7\" fill=\"url(#paint0_linear_489_3167)\"/>\n      <path d=\"M25.5 16C22.785 16 20.3108 17.0305 18.4468 18.7216L23.2968 20.96C23.7106 21.151 24.161 21.2499 24.6168 21.2499H29.7C30.2799 21.2499 30.75 21.72 30.75 22.2999V30.6999C30.75 31.2798 30.2799 31.7499 29.7 31.7499H21.3C20.7201 31.7499 20.25 31.2798 20.25 30.6999V25.6167C20.25 25.1609 20.1511 24.7106 19.9601 24.2967L17.7216 19.4469C16.0305 21.3108 15 23.785 15 26.5C15 32.299 19.701 37 25.5 37C31.299 37 36 32.299 36 26.5C36 20.701 31.299 16 25.5 16Z\" fill=\"white\"/>\n      <defs>\n        <linearGradient id=\"paint0_linear_489_3167\" x1=\"0\" y1=\"-4.33333\" x2=\"49.1111\" y2=\"59.9444\" gradientUnits=\"userSpaceOnUse\">\n          <stop stop-color=\"#FF5786\"/>\n          <stop offset=\"0.583333\" stop-color=\"#CA41C3\"/>\n          <stop offset=\"1\" stop-color=\"#9033E5\"/>\n        </linearGradient>\n      </defs>\n    </svg>\n  ),\nAppStoreApp02:(props: IconProps) => \n   (\n    <svg  viewBox=\"0 0 52 52\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n      <rect x=\"0.181641\" y=\"0.681641\" width=\"51.0545\" height=\"51.0545\" rx=\"8.50909\" fill=\"#091C41\"/>\n      <g clip-path=\"url(#clip0_495_4206)\">\n      <path d=\"M22.5224 8.85396L12.6254 14.5897C10.3471 15.9087 8.94336 18.3488 8.94336 20.9882V32.5191C8.94336 35.1585 10.3471 37.5985 12.6254 38.9176L22.5723 44.6824C24.8506 46.0027 27.6568 46.0027 29.9338 44.6824L36.1265 41.0949L22.5802 33.1608C20.319 31.8364 18.9284 29.4069 18.9284 26.7781V15.2353C18.9284 12.4269 20.4228 10.1387 22.5264 8.88433C22.5829 8.85 22.5697 8.82623 22.5224 8.85396Z\" fill=\"url(#paint0_linear_495_4206)\"/>\n      <path d=\"M43.6496 20.9246L43.6549 32.3868C43.6549 32.4422 43.626 32.4409 43.626 32.3749C43.5932 29.9216 36.7675 25.4851 34.3422 24.0816C34.3422 24.0816 33.2719 22.9923 32.5642 22.3598C31.8564 21.726 31.8222 21.697 31.2944 21.3458C30.8361 21.0421 30.3594 20.8044 30.0535 20.6512L30.0246 20.6367C29.7199 20.4849 28.806 20.0795 28.806 20.0795C25.6558 18.9664 24.7418 18.8648 22.914 20.2829C22.914 20.2829 20.7801 22.3598 19.9673 24.2334C19.1545 26.107 18.9483 27.7535 19.3068 28.7914C19.3252 28.8429 19.337 28.8917 19.3462 28.9379C20.4033 31.6262 21.1386 32.0527 22.9862 33.1235C23.1228 33.2041 23.2672 33.2872 23.4182 33.3757L28.0916 35.6045L36.8279 38.7945L29.6779 44.6821C27.4009 46.0025 24.5935 46.0025 22.3165 44.6821L12.3682 38.9173C10.0912 37.5983 8.6875 35.1582 8.6875 32.5188V20.9879C8.6875 18.3485 10.0912 15.9085 12.3682 14.5894L22.2653 8.85368C22.3139 8.82596 22.327 8.84972 22.2705 8.88405C22.1563 8.95139 22.042 9.04778 21.9278 9.16925L22.6356 8.75994C24.9152 7.4422 27.724 7.44352 30.0036 8.76258L39.9624 14.5287C42.2419 15.8477 43.6483 18.2865 43.6496 20.9246Z\" fill=\"url(#paint1_linear_495_4206)\"/>\n      <path d=\"M12.8196 39.2052L22.7994 45.007C25.1001 46.3313 28.006 46.3049 30.3092 44.9779L40.3639 39.1828C42.6671 37.8545 44.0853 35.4039 44.0866 32.7512L44.0919 21.1689C44.0932 18.5176 42.6763 16.0669 40.3757 14.7426L34.12 11.1406L34.0399 26.9548C34.0267 29.5942 32.6099 32.0303 30.3171 33.3507L20.2507 39.1537C17.8004 40.5652 15.052 40.4107 12.8958 39.2052C12.8367 39.1722 12.7711 39.1775 12.8196 39.2052Z\" fill=\"url(#paint2_linear_495_4206)\"/>\n      </g>\n      <defs>\n      <linearGradient id=\"paint0_linear_495_4206\" x1=\"22.4673\" y1=\"8.8418\" x2=\"22.7156\" y2=\"45.6719\" gradientUnits=\"userSpaceOnUse\">\n      <stop stop-color=\"#AD7EE1\"/>\n      <stop offset=\"1\" stop-color=\"#2A64BB\"/>\n      </linearGradient>\n      <linearGradient id=\"paint1_linear_495_4206\" x1=\"8.6875\" y1=\"15.0845\" x2=\"45.14\" y2=\"35.7392\" gradientUnits=\"userSpaceOnUse\">\n      <stop stop-color=\"#2F99FF\"/>\n      <stop offset=\"1\" stop-color=\"#002C7D\"/>\n      </linearGradient>\n      <linearGradient id=\"paint2_linear_495_4206\" x1=\"17.7529\" y1=\"45.9868\" x2=\"42.3954\" y2=\"13.6177\" gradientUnits=\"userSpaceOnUse\">\n      <stop stop-color=\"#24A5FA\"/>\n      <stop offset=\"1\" stop-color=\"#24A5F9\"/>\n      </linearGradient>\n      <clipPath id=\"clip0_495_4206\">\n      <rect width=\"35.4545\" height=\"38.2909\" fill=\"white\" transform=\"translate(8.68848 7.77246)\"/>\n      </clipPath>\n      </defs>\n    </svg>\n  ),\n\n}\n\n\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":["sides","min","max","round","floor","createCoords","v","oppositeSideMap","oppositeAlignmentMap","clamp","start","value","end","evaluate","param","getSide","placement","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","getSideList","side","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","expandPaddingObject","padding","__spreadValues","getPaddingObject","rectToClientRect","rect","__spreadProps","computeCoordsFromPlacement","_ref","reference","floating","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition","config","__async","strategy","middleware","platform","validMiddleware","x","y","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","detectOverflow","state","options","_await$platform$isEle","elements","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","offsetParent","offsetScale","elementClientRect","arrow","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","flip","_middlewareData$arrow","_middlewareData$flip","initialPlacement","_a","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","detectOverflowOptions","__objRest","isBasePlacement","fallbackPlacements","placements","overflow","overflows","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","resetPlacement","d","a","b","_overflowsData$map$so","acc","getSideOffsets","isAnySideFullyClipped","hide","offsets","getBoundingRect","minX","minY","maxX","maxY","getRectsByLine","sortedRects","groups","prevRect","inline","nativeClientRects","clientRects","fallback","getBoundingClientRect","firstRect","lastRect","isTop","top","bottom","left","right","width","height","isLeftSide","maxRight","minLeft","measureRects","resetRects","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","diffCoords","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","isOriginSide","size","apply","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","getNodeName","node","isNode","getWindow","_node$ownerDocument","getDocumentElement","isElement","isHTMLElement","isShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","isTableElement","isContainingBlock","webkit","isWebKit","css","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","getNodeScroll","result","getNearestOverflowAncestor","parentNode","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","unwrapElement","getScale","domElement","$","noOffsets","getVisualOffsets","shouldAddVisualOffsets","isFixed","floatingOffsetParent","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentIFrame","iframeScale","iframeRect","convertOffsetParentRelativeRectToViewportRelativeRect","isOffsetParentAnElement","documentElement","scroll","offsetRect","getClientRects","getWindowScrollBarX","getDocumentRect","html","body","getViewportRect","visualViewport","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","getClippingElementAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingRect","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getDimensions","getRectRelativeToOffsetParent","getTrueOffsetParent","polyfill","getOffsetParent","window","getElementRects","getOffsetParentFn","getDimensionsFn","isRTL","observeMove","onMove","io","timeoutId","root","cleanup","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","isFirstUpdate","handleObserve","entries","ratio","e","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","layoutShift","animationFrame","referenceEl","ancestors","cleanupIo","reobserveFrame","resizeObserver","firstEntry","frameId","prevRefRect","frameLoop","nextRefRect","mergedOptions","platformWithCache","computePosition$1","Icons","props","jsxs","jsx","Input","React.forwardRef","ref","_b","className","type","cn"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}