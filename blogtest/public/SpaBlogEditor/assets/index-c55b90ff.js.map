{"version":3,"mappings":"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","names":["Blog","lazy","__vitePreload","Preview","NewBlog","NewCategory","NewSystemPage","NewBlogger","NewPage","EditCategory","EditBlog","EditBlogger","EditPage","EditSystemPage","Test","router","createBrowserRouter","createRoutesFromElements","jsxs","Route","jsx","App","RouterProvider","TabContext","createContext","TabProvider","children","myVariable","setMyVariable","useState","del","setDelete","rows","setRows","mutate","setMutate","contextValue","value","index","newValue","PostContext","PostProvider","object","setMyObject","data","setData","copy","setCopy","tabContext","useContext","submit","setSubmit","publish","setPublish","changeSubmit","changePublish","changeVariable","changeObject","newobj","property","prevObject","__spreadProps","__spreadValues","dataList","useFrappeGetDocList","createDoc","isCompleted","useFrappeCreateDoc","useEffect","variable","datatemp","json","page","TypeContext","TypeProvider","previousPage","setPreviousPage","block","setBlock","view","setView","newvalue","isLoading","PageContext","PageProvider","submited","BloggerContext","BloggerProvider","deleteData","SystemPageContext","SystemPageProvider","AnimationContext","AnimationProvider","SideBarRight","setSideBarRight","Sidebar","setSidebar","SideApp","setSideApp","ItemSideBar","setItemSideBar","error","setError","CategoryContext","CategoryProvider","handleCopy","_a","name","__objRest","cn","inputs","twMerge","clsx","ToastProvider","ToastPrimitives.Provider","ToastViewport","React.forwardRef","ref","_b","className","props","ToastPrimitives.Viewport","toastVariants","cva","Toast","variant","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","Cross2Icon","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","toast","t","listeners","memoryState","listener","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","Toaster","toasts","title","description","LoadingStateContext","LoadingStateProvider","loading","setLoading","progress","setProgress","completed","setCompleted","Progress","ProgressPrimitive.Root","ProgressPrimitive.Indicator","ProgressDemo","timer","num","ReactDOM","React","FrappeProvider"],"sources":["../../../../SpaBlogEditor/src/App.tsx","../../../../SpaBlogEditor/src/provider/tabProvider.tsx","../../../../SpaBlogEditor/src/provider/postProvider.tsx","../../../../SpaBlogEditor/src/provider/typeProvider.tsx","../../../../SpaBlogEditor/src/provider/pageProvider.tsx","../../../../SpaBlogEditor/src/provider/BloggerProvider.tsx","../../../../SpaBlogEditor/src/provider/SystemPageProvider.tsx","../../../../SpaBlogEditor/src/provider/animationProvider.tsx","../../../../SpaBlogEditor/src/provider/categoryProvider.tsx","../../../../SpaBlogEditor/src/lib/utils.ts","../../../../SpaBlogEditor/src/components/ui/toast.tsx","../../../../SpaBlogEditor/src/components/ui/use-toast.ts","../../../../SpaBlogEditor/src/components/ui/toaster.tsx","../../../../SpaBlogEditor/src/provider/loadinStateProvider.tsx","../../../../SpaBlogEditor/src/components/ui/progress.tsx","../../../../SpaBlogEditor/src/component/progress.tsx","../../../../SpaBlogEditor/src/main.tsx"],"sourcesContent":["\nimport { lazy } from 'react'\nimport {createBrowserRouter, createRoutesFromElements, RouterProvider ,Route} from 'react-router-dom'\nconst Blog = lazy(() => import('./pages/blog/page'))\nconst Preview = lazy(() => import('./pages/preview/page'))\nconst NewBlog = lazy(() => import('./pages/newPost/page'))\nconst NewCategory = lazy(() => import('./pages/newCategories/page'))\nconst NewSystemPage = lazy(() => import('./pages/newSystemPage/page'))\nconst NewBlogger = lazy(() => import('./pages/newBlogger/page'))\nconst NewPage = lazy(() => import('./pages/newPage/page'))\nconst EditCategory = lazy(() => import('./pages/editCategory/page'))\nconst EditBlog = lazy(() => import('./pages/editBlog/page'))\nconst EditBlogger = lazy(() => import('./pages/editBlogger/page'))\nconst EditPage = lazy(() => import('./pages/editPage/page'))\nconst EditSystemPage = lazy(() => import('./pages/editSystemPage/page'))\nconst Test = lazy(() => import('./component/test'))\n\n\nconst router = createBrowserRouter(\n\tcreateRoutesFromElements(\n\n\t\t<Route  path='/' >\n\t\t\t<Route index element={<Blog/>}></Route>\n\t\t\t<Route path=\"newPost\" element={<NewBlog/>}></Route>\n\t\t\t<Route path=\"newCategories\" element={<NewCategory/>}></Route>\n\t\t\t<Route path=\"newSystemPage\" element={<NewSystemPage/>}></Route>\n\t\t\t<Route path=\"newBlogger\" element={<NewBlogger/>}></Route>\n\t\t\t<Route path=\"newPage\" element={<NewPage/>}></Route>\n\t\t\t<Route path=\"editCategory\" element={<EditCategory/>}></Route>\n\t\t\t<Route path=\"editPost\" element={<EditBlog/>}></Route>\n\t\t\t<Route path=\"editBlogger\" element={<EditBlogger/>}></Route>\n\t\t\t<Route path=\"editPage\" element={<EditPage/>}></Route>\n\t\t\t<Route path=\"editSystemPage\" element={<EditSystemPage/>}></Route>\n\t\t\t<Route path=\"preview\" element={<Preview/>}></Route>\n\t\t\t<Route path=\"test\" element={<Test/>}></Route>\n\t\t</Route>\n\t),\n\t{basename :  '/spablogeditor'}\n)\n\n\nfunction App() {\n\t\n  return (\n\n\t<RouterProvider router={router}/>\n\n  )\n}\n\nexport default App\n","\nimport { TabContextType, contextTab } from \"../../typing\";\nimport { createContext, useState } from \"react\";\n\n\nconst TabContext = createContext<contextTab>({} as contextTab);\n\n// Créez le fournisseur de contexte\nconst TabProvider = ({children} : {children : any}) => {\n    // Définissez la variable d'état et la fonction pour la mettre à jour\n    const [myVariable, setMyVariable] = useState<TabContextType>('Post');\n    const [del, setDelete] = useState<boolean>(false)\n    const [rows, setRows] = useState<string[]>([])\n    const [mutate, setMutate] = useState<boolean>(false)\n\n  \n    const changeMutate = () => {\n      setMutate(!mutate)\n      setRows([])\n    }\n\n    const addRows = (value : string) => {\n      rows.push(value)\n    }\n  \n    const suppRows = (value : string) => {\n        const index = rows.indexOf(value);\n        if (index > -1) {\n            rows.splice(index, 1);\n        }\n    }\n \n    // Fonction pour changer la variable\n    const changeVariable = (newValue : TabContextType) => {\n      setMyVariable(newValue);\n    };\n  \n    // Valeur fournie par le contexte\n    const contextValue = {\n      mutate : mutate,\n      toggleMutate : changeMutate,\n      rows : rows,\n      addRow : addRows,\n      suppRow : suppRows,\n      delete : del,\n      setDelete : setDelete,\n      variable : myVariable,\n      ChangeVariable : changeVariable,\n    };\n  \n    return <TabContext.Provider value={contextValue}>{children}</TabContext.Provider>;\n  };\n  \n  export { TabContext, TabProvider };","\nimport { PostContextType, contextPost, DataDocList } from \"../../typing\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { UpdateObject } from \"../../typing\";\n\nconst PostContext = createContext<contextPost>({} as contextPost);\n\n\nimport { useFrappeGetDocList, useFrappeCreateDoc} from 'frappe-react-sdk'\nimport { TabContext } from \"./tabProvider\";\n\n\n\n// Créez le fournisseur de contexte\nconst PostProvider = ({children} : {children : any}) => { \n    // Définissez la variable d'état et la fonction pour la mettre à jour\n    const [myVariable, setMyVariable] = useState<PostContextType>('');\n    const [object, setMyObject] = useState<UpdateObject>({} as UpdateObject)\n    const [data , setData] = useState<DataDocList>()\n    const [copy, setCopy] = useState(false)\n    const tabContext = useContext(TabContext)\n    const [submit, setSubmit] = useState(false)\n    const [publish, setPublish] = useState(true)\n\n    const changeSubmit = (newValue : boolean) => {\n      setSubmit(newValue);\n    }\n\n    const changePublish = (newValue : boolean) => {\n      setPublish(newValue);\n    }\n\n    \n    // Fonction pour changer la variable\n    const changeVariable = (newValue : PostContextType) => {\n      setMyVariable(newValue );\n    };\n\n\n    const changeObject = (newobj? : UpdateObject, property?: keyof UpdateObject, value?: UpdateObject[keyof UpdateObject]) => {\n      if (newobj) {\n        setMyObject(newobj);\n      } else if (property && value) {\n        setMyObject(prevObject => ({ ...prevObject,[property]: value }));\n      }\n    };\n    \n    const {data : dataList , mutate} = useFrappeGetDocList<DataDocList>('Blog Post',{fields : [ 'content_type',\n    'name',\n    'published',\n    'title',\n    'blog_category', 'content_json', 'blogger','published_on','meta_image'],limit : 200} )\n    const {createDoc,isCompleted} = useFrappeCreateDoc<DataDocList>()\n\n\n    useEffect(() => {\n      if(dataList)\n      {\n        if(myVariable != 'null')\n        {\n          let variable = parseInt(myVariable)\n          setData(dataList[variable])\n        }\n        else{\n          setData({} as DataDocList)\n        }\n      }\n    },[dataList,myVariable])\n\n    useEffect(()=> {\n      if(!submit)\n      {\n        mutate()\n      }\n    },[submit])\n\n\n\n\n    useEffect(()=> {\n      if(copy)\n      {\n        if(dataList)\n        {\n          if(myVariable != 'null')\n          {\n            let datatemp = dataList[parseInt(myVariable)]\n            datatemp.title = datatemp.title + ' (copy)'\n            let json = JSON.parse(datatemp.content_json)\n            json.blocks[0].content[0].text = json.blocks[0].content[0].text + ' (copy)';\n            datatemp.content_json = JSON.stringify(json)\n            createDoc('Blog Post',datatemp).then(() => {\n              tabContext.toggleMutate()\n              setCopy(false)\n            })\n          }\n        }\n      }\n    },[copy,dataList,myVariable])\n\n    useEffect(() => {\n      mutate()\n    },[isCompleted])\n\n    const handleCopy = ( page : string) => {\n      setMyVariable(page)\n      setCopy(true)\n    }\n\n\n    // Valeur fournie par le contexte\n    const contextValue : contextPost = {\n      update : object,\n      variable : myVariable,\n      dataList : dataList ,\n      data : data,\n      copy : copy,\n      publish : publish,\n      submit : submit,\n      setPublish : changePublish,\n      setSubmit : changeSubmit,\n      makeCopy :handleCopy,\n      ChangeObject : changeObject,\n      ChangeVariable : changeVariable,\n    };\n  \n    return <PostContext.Provider value={contextValue}>{children}</PostContext.Provider>;\n  };\n  \n  export { PostContext, PostProvider };","\nimport { TypeContextType, contextType, view, Category, TabContextType } from \"../../typing\";\nimport { createContext, useState} from \"react\";\nconst TypeContext = createContext<contextType>({} as contextType);\n\n\nimport {useFrappeGetDocList} from 'frappe-react-sdk'\n\n// Créez le fournisseur de contexte\nconst TypeProvider = ({children} : {children : any}) => { \n    // Définissez la variable d'état et la fonction pour la mettre à jour\n    const [myVariable, setMyVariable] = useState<TypeContextType>('');\n    const [previousPage, setPreviousPage] = useState<TabContextType>()\n    const [block, setBlock] = useState<any>({})\n    const [view, setView] = useState<view>('desktop')\n\n    const changeView = (newvalue : view) => {\n      setView(newvalue)\n    }\n    // Fonction pour changer la variable\n    const changeVariable = (newValue : TypeContextType) => {\n      setMyVariable(newValue);\n    };\n\n    const changepage = (newValue : TabContextType) => {\n      setPreviousPage(newValue);\n    };\n\n    const changeBlock = (newValue : any) => {\n      setBlock(newValue);\n    };\n\n    const getdata = () => {\n      var {data ,isLoading} = useFrappeGetDocList<Category>('Blog Category',{fields : [ \n      'title',\n      'name',\n      'published',\n      'image',\n      'description'\n       ], limit : 200} )\n      if (data){\n        return {data, isLoading}\n      }else{\n        data = {} as Category[];\n        return {data, isLoading}\n      }\n    } \n\n\n    // Valeur fournie par le contexte\n    const contextValue : contextType = {\n      view : view,\n      changeView : changeView,\n      previousPage : previousPage,\n      block : block,\n      changeBlock : changeBlock,\n      changepage : changepage,\n      variable : myVariable,\n      data : getdata ,\n      ChangeVariable : changeVariable,\n    };\n  \n    return <TypeContext.Provider value={contextValue}>{children}</TypeContext.Provider>;\n  };\n  \n  export { TypeContext, TypeProvider };","\nimport { createContext, useEffect, useState} from \"react\";\n\n\nconst PageContext = createContext({} as any);\n\n\nimport { useFrappeGetDocList} from 'frappe-react-sdk'\n\n\n// Créez le fournisseur de contexte\nconst PageProvider = ({children} : {children : any}) => { \n    // Définissez la variable d'état et la fonction pour la mettre à jour\n    const [myVariable, setMyVariable] = useState('');\n    const [data , setData] = useState()\n    const [submited , setSubmit] = useState(2)\n    // Fonction pour changer la variable\n    const changeVariable = (newValue : string) => {\n      setMyVariable(newValue);\n    };\n    \n    var {data : dataList , mutate} = useFrappeGetDocList('BlogPage',{fields : [ '*']} )\n\n    useEffect(() => {\n      if(dataList)\n      {\n        if(myVariable)\n        {\n          let variable = parseInt(myVariable)\n          setData(dataList[variable])\n        }\n      }\n    },[dataList,myVariable])\n\n    useEffect(()=> {\n      if(submited == 1)\n      {\n        mutate()\n      }\n  \n    },[submited])\n  \n    const changeSubmit = (value : number) => {\n        setSubmit(value)\n    }\n\n    // Valeur fournie par le contexte\n    const contextValue = {\n      update : submited,\n      variable : myVariable,\n      dataList : dataList ,\n      data : data,\n      mutate : mutate,\n      setData : setData,\n      changeSubmit : changeSubmit,\n      changeVariable : changeVariable,\n    };\n  \n    return <PageContext.Provider value={contextValue}>{children}</PageContext.Provider>;\n  };\n  \n  export { PageContext, PageProvider };","\nimport { createContext, useEffect, useState } from \"react\";\n\n\nconst BloggerContext = createContext<contextValueBlogger>({} as contextValueBlogger);\n\n\nimport { useFrappeGetDocList} from 'frappe-react-sdk'\nimport { BloggerType } from \"../../typing\";\n\n\n// Créez le fournisseur de contexte\nconst BloggerProvider = ({children} : {children : any}) => { \n    // Définissez la variable d'état et la fonction pour la mettre à jour\n    const [myVariable, setMyVariable] = useState<string>('');\n    const [data , setData] = useState<BloggerType>()\n    const [submited , setSubmit] = useState(false)\n    // Fonction pour changer la variable\n    const changeVariable = (newValue : string) => {\n      setMyVariable(newValue);\n    };\n    \n    var {data : dataList , mutate} = useFrappeGetDocList<BloggerType>('Blogger',{fields : [\n    'name',\n    'full_name',\n    'short_name',\n    'avatar',\n    'disabled',\n    'bio'],limit:200} )\n    \n\n    const deleteData = () => {\n      setData(undefined)\n    }\n\n    useEffect(() => {\n      if(dataList)\n      {\n        if(myVariable)\n        {\n          let variable = parseInt(myVariable)\n          setData(dataList[variable])\n        }\n      }\n    },[dataList,myVariable])\n\n    useEffect(()=> {\n      if(!submited)\n      {\n        mutate()\n      }\n    },[submited])\n  \n    const changeSubmit = (value : boolean) => {\n        setSubmit(value)\n    }\n\n\n\n\n    // Valeur fournie par le contexte\n    const contextValue : contextValueBlogger= {\n      update : submited,\n      variable : myVariable,\n      dataList : dataList ,\n      data : data,\n      changeSubmit : changeSubmit,\n      changeVariable : changeVariable,\n      deleteData : deleteData,\n    };\n  \n    return <BloggerContext.Provider value={contextValue}>{children}</BloggerContext.Provider>;\n  };\n  \n  export { BloggerContext, BloggerProvider };\n\n  type contextValueBlogger = {\n    update: boolean;\n    variable: string;\n    dataList: BloggerType[] | undefined;\n    data: BloggerType | undefined;\n    changeSubmit: (value: boolean) => void;\n    changeVariable: (newValue: string) => void;\n    deleteData : () => void;\n  }","\nimport { createContext, useEffect, useState} from \"react\";\n\n\nconst SystemPageContext = createContext<contextValueSystemPage>({} as contextValueSystemPage);\n\n\nimport { useFrappeGetDocList} from 'frappe-react-sdk'\nimport { SystemPage, UpdateObject } from \"../../typing\";\n\n\n// Créez le fournisseur de contexte\nconst SystemPageProvider = ({children} : {children : any}) => { \n    // Définissez la variable d'état et la fonction pour la mettre à jour\n    const [myVariable, setMyVariable] = useState<string>('');\n    const [data , setData] = useState<SystemPage>()\n    const [object , setMyObject] = useState<UpdateObject>({} as UpdateObject)\n    // Fonction pour changer la variable\n    const changeVariable = (newValue : string) => {\n      setMyVariable(newValue);\n    };\n    \n    var {data : dataList , mutate} = useFrappeGetDocList<SystemPage>('SystemPage',{fields : ['*']} )\n\n    useEffect(() => {\n      if(dataList)\n      {\n        if(myVariable)\n        {\n          let variable = parseInt(myVariable)\n          setData(dataList[variable])\n        }\n        else{\n          setData({} as SystemPage)\n        }\n      }\n    },[dataList,myVariable])\n\n\n  \n    const changeObject = (newobj? : UpdateObject, property?: keyof UpdateObject, value?: UpdateObject[keyof UpdateObject]) => {\n      if (newobj) {\n        setMyObject(newobj);\n      } else if (property && value) {\n        setMyObject(prevObject => ({ ...prevObject,[property]: value }));\n      }\n    };\n\n    // Valeur fournie par le contexte\n    const contextValue : contextValueSystemPage= {\n      update : object,\n      variable : myVariable,\n      dataList : dataList ,\n      data : data,\n      changeSubmit : changeObject,\n      changeVariable : changeVariable,\n      mutate : mutate,\n    };\n  \n    return <SystemPageContext.Provider value={contextValue}>{children}</SystemPageContext.Provider>;\n  };\n  \n  export { SystemPageContext, SystemPageProvider };\n\n  type contextValueSystemPage = {\n    update: UpdateObject;\n    variable: string;\n    dataList: SystemPage[] | undefined;\n    data: SystemPage | undefined;\n    changeSubmit: (newobj?: UpdateObject, property?: keyof UpdateObject, value?: UpdateObject[keyof UpdateObject]) => void;\n    changeVariable: (newValue: string) => void;\n    mutate: () => void;\n  }","\n\nimport {useState, createContext} from \"react\"\n\ntype AnimationType = {\n   error : boolean\n   sidebarRight : boolean,\n   sidebar : boolean,\n   sideApp : boolean,\n   itemSideBar : boolean,\n   toggle  : (value : objectAnimation) => void,\n}\n\ntype objectAnimation = 'SideBar' | 'SideApp' | 'SideBarRight' | 'ItemSideBar' | 'Error'\n\nconst AnimationContext = createContext<AnimationType>({} as AnimationType)\n\nconst AnimationProvider = ({children} : {children : any}) => {\n    const [SideBarRight, setSideBarRight] = useState<boolean>(false)\n    const [Sidebar, setSidebar] = useState<boolean>(false)\n    const [SideApp, setSideApp] = useState<boolean>(false)\n    const [ItemSideBar, setItemSideBar] = useState<boolean>(false)\n    const [error, setError] = useState<boolean>(false)\n\n\n    const toggle = (value : objectAnimation) => {\n        switch(value)\n        {\n            case 'SideBar':\n                setSidebar(!Sidebar)\n                break;\n            case 'SideApp':\n                setSideApp(!SideApp)\n                break;\n            case 'SideBarRight':\n                setSideBarRight(!SideBarRight)\n                break;\n            case 'ItemSideBar':\n                setItemSideBar(!ItemSideBar)\n                break;\n            case 'Error':\n                \n                setError(!error)\n                break;\n        }\n    }\n\n    const contextValue : AnimationType = {\n        error : error,\n        sidebarRight : SideBarRight,\n        sidebar : Sidebar,\n        sideApp : SideApp,\n        itemSideBar : ItemSideBar,\n        toggle : toggle\n    }\n\n    return <AnimationContext.Provider value={contextValue}>{children}</AnimationContext.Provider>\n}\n\nexport {AnimationProvider, AnimationContext}","\nimport { createContext, useContext, useEffect, useState } from \"react\";\n\n\nconst CategoryContext = createContext<contextValueBlogger>({} as contextValueBlogger);\n\n\nimport { useFrappeCreateDoc, useFrappeGetDocList} from 'frappe-react-sdk'\nimport { Category } from \"../../typing\";\nimport { TabContext } from \"./tabProvider\";\ntype CategoryCreate= Omit<Category, 'name'>;\n\n// Créez le fournisseur de contexte\nconst CategoryProvider = ({children} : {children : any}) => { \n    // Définissez la variable d'état et la fonction pour la mettre à jour\n    const [myVariable, setMyVariable] = useState<string>('');\n    const [data , setData] = useState<Category>()\n    const [submited , setSubmit] = useState<boolean>(false)\n    const [copy, setCopy] = useState(false)\n    const tabContext = useContext(TabContext) \n    // Fonction pour changer la variable\n    const changeVariable = (newValue : string) => {\n      setMyVariable(newValue);\n    };\n    \n    var {data : dataList , mutate} = useFrappeGetDocList<Category>('Blog Category',{fields : [\n    'name',\n    'title',\n    'image',\n    'published',\n    'description'],limit : 200} )\n    const {createDoc,isCompleted} = useFrappeCreateDoc<CategoryCreate>()\n    \n    const deleteData = () => {\n      setData(undefined)\n    }\n\n    useEffect(() => {\n      mutate()\n    },[isCompleted])\n\n    const handleCopy = ( page : string) => {\n      setMyVariable(page)\n      setCopy(true)\n    }\n    useEffect(()=> {\n      if(copy)\n      {\n        if(dataList)\n        {\n          if(myVariable != 'null')\n          {\n            let { name, ...datatemp } = dataList[parseInt(myVariable)]\n            datatemp.title = datatemp.title + ' (copy)'\n            createDoc('Blog Category',datatemp).then(() => {\n              tabContext.toggleMutate()\n              setCopy(false)\n            })\n          }\n        }\n      }\n    },[copy,dataList,myVariable])\n\n    useEffect(() => {\n      if(dataList)\n      {\n        if(myVariable)\n        {\n          let variable = parseInt(myVariable)\n          setData(dataList[variable])\n        }\n      }\n    },[dataList,myVariable])\n\n    useEffect(()=> {\n      if(!submited)\n      {\n        mutate()\n\n      }\n    },[submited])\n  \n    const changeSubmit = (value : boolean) => {\n        setSubmit(value)\n    }\n\n    // Valeur fournie par le contexte\n    const contextValue : contextValueBlogger= {\n      update : submited,\n      variable : myVariable,\n      copy : copy,\n      makeCopy : handleCopy,\n      dataList : dataList ,\n      data : data,\n      changeSubmit : changeSubmit,\n      changeVariable : changeVariable,\n      deleteData : deleteData,\n    };\n  \n    return <CategoryContext.Provider value={contextValue}>{children}</CategoryContext.Provider>;\n  };\n  \n  export { CategoryContext, CategoryProvider };\n\n  type contextValueBlogger = {\n    update: boolean | undefined;\n    variable: string;\n    copy: boolean;\n    makeCopy : (value : string) => void;\n    dataList: Category[] | undefined;\n    data: Category | undefined;\n    changeSubmit: (value : boolean) => void;\n    changeVariable: (newValue: string) => void;\n    deleteData : () => void;\n  }","import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n \nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import * as React from \"react\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <Cross2Icon className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold [&+div]:text-xs\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_VALUE\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","\n\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\nimport { useToast } from \"@/components/ui/use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","import {createContext, useState} from 'react';\n\ntype loadingStateType = {\n    loading : boolean,\n    setLoading : (newValue : boolean) => void\n    progress : number,\n    setProgress : (newValue : number) => void,\n    completed : boolean,\n    setCompleted : (newValue : boolean) => void\n}\n\nconst LoadingStateContext = createContext({} as loadingStateType)\n\n\nconst LoadingStateProvider = ({children} : {children : any}) => {\n    const [loading, setLoading] = useState<boolean>(false)\n    const [progress, setProgress] = useState<number>(0)\n    const [completed, setCompleted] = useState<boolean>(false)\n\n\n    const ChangeLoading = (newValue : boolean) => {\n        setLoading(newValue);\n    }\n    const ChangeCompleted = () => {\n            setCompleted(true);\n            setLoading(false)\n    }\n\n    const ChangeProgress = (newValue : number) => {\n        setProgress(newValue);\n    }\n\n    const contextValue : loadingStateType = {\n        loading : loading,\n        setLoading : ChangeLoading,\n        progress : progress,\n        setProgress : ChangeProgress,\n        completed : completed,\n        setCompleted : ChangeCompleted,\n    };\n\n    return <LoadingStateContext.Provider value={contextValue}>{children}</LoadingStateContext.Provider>;\n};\n\n\nexport {LoadingStateContext, LoadingStateProvider};","\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-gradient-to-r from-[#5756FF] -from-0.6% to-[#9149FF] to-121.53% transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","import { useState, useEffect, useContext } from \"react\"\n\nimport { Progress,  } from \"@/components/ui/progress\"\nimport { LoadingStateContext } from \"@/provider/loadinStateProvider\"\n\n\n\nexport function ProgressDemo() {\n  const [progress, setProgress] = useState(0)\n  const loading =  useContext(LoadingStateContext)\n  var timer : NodeJS.Timeout;\n\n  useEffect(() => {\n    if(loading.loading === true)\n    {\n      clearTimeout(timer)\n      timer = setTimeout(() => setProgress(95), 1000)\n    }\n    if(loading.progress !== 0)\n    {\n      const num = loading.progress/4\n      clearTimeout(timer)\n      timer = setTimeout(() => setProgress(num), 1000)\n    }\n    if(loading.completed)\n    {\n      clearTimeout(timer)\n      timer = setTimeout(() => setProgress(100), 100)\n    }\n  }, [loading.progress, loading.loading, loading.completed])\n\n  useEffect(() => {\n    if(progress === 100)\n    {\n      clearTimeout(timer)\n      setTimeout(() => setProgress(0), 1000)\n    }\n  }, [progress])\n\n\n  return <Progress value={progress} className=\"w-full z-[9999] h-1 rounded-none fixed top-0 left-0  bg-transparent ;\n  ] \" />\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\nimport { TabProvider } from './provider/tabProvider.tsx';\nimport { PostProvider } from './provider/postProvider.tsx';\nimport { TypeProvider } from './provider/typeProvider.tsx';\nimport {PageProvider} from './provider/pageProvider.tsx';\nimport {BloggerProvider} from './provider/BloggerProvider.tsx';\nimport { SystemPageProvider } from './provider/SystemPageProvider.tsx';\nimport { AnimationProvider } from './provider/animationProvider.tsx';\nimport { CategoryProvider } from './provider/categoryProvider.tsx';\nimport { FrappeProvider } from 'frappe-react-sdk'\nimport { Toaster } from \"@/components/ui/toaster\"\nimport { LoadingStateProvider } from './provider/loadinStateProvider.tsx';\nimport { ProgressDemo } from './component/progress.tsx';\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    \t  <FrappeProvider\n          url='https://dev.zaviago.com' \n            tokenParams={{\n            type: 'token',\n            useToken: true,\n            token: () => `2ad3412e27b5c61:1cf86d7f8a8a367`\n          }}>\n      <AnimationProvider>\n      <TabProvider>\n      <LoadingStateProvider>\n      <TypeProvider>\n      <SystemPageProvider>\n      <BloggerProvider>\n      <PostProvider>\n      <PageProvider>\n      <CategoryProvider>\n      <ProgressDemo/>\n      <App />\n      <Toaster />\n      </CategoryProvider> \n      </PageProvider>  \n      </PostProvider>\n      </BloggerProvider>\n      </SystemPageProvider>\n      </TypeProvider>\n      </LoadingStateProvider>\n      </TabProvider>\n      </AnimationProvider>\n      </FrappeProvider>\n  </React.StrictMode>,\n)\n"],"file":"assets/index-c55b90ff.js"}